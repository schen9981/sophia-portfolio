'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectors = exports.actions = undefined;

var _assoc2 = require('ramda/src/assoc');

var _assoc3 = _interopRequireDefault(_assoc2);

var _is2 = require('ramda/src/is');

var _is3 = _interopRequireDefault(_is2);

var _mergeWithKey2 = require('ramda/src/mergeWithKey');

var _mergeWithKey3 = _interopRequireDefault(_mergeWithKey2);

var _merge2 = require('ramda/src/merge');

var _merge3 = _interopRequireDefault(_merge2);

var _actions = require('./actions');

var actions = _interopRequireWildcard(_actions);

var _selectors = require('./selectors');

var selectors = _interopRequireWildcard(_selectors);

var _ModalDefault = require('../components/ModalDefault');

var _ModalDefault2 = _interopRequireDefault(_ModalDefault);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.actions = actions;
exports.selectors = selectors;

exports.default = function () {
  var defaultState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var enhancer = function enhancer(k, l, r) {
    return k === 'ok' ? (0, _merge3.default)(l, r) : r;
  };
  var initState = (0, _mergeWithKey3.default)(enhancer, {
    show: false,
    classContent: 'modal-content',
    animation: 'zoomIn',
    duration: 300,
    mask: true,
    closeByMask: true,
    component: _ModalDefault2.default,
    title: 'This is a title',
    closeBtn: true,
    textCancel: 'Cancel',
    ok: {
      text: 'OK',
      classOk: 'modal-btn-ok',
      disabled: false,
      action: function action() {
        return console.log('OK clicked');
      }
    }
  }, defaultState);

  return function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;
    var action = arguments[1];

    switch (action.type) {
      case actions.TOGGLE_MODAL:
        if ((0, _is3.default)(Object, action.payload)) {
          return (0, _mergeWithKey3.default)(enhancer, initState, (0, _merge3.default)({ show: true }, action.payload));
        }
        return (0, _assoc3.default)('show', false, state);
      case actions.MODIFY_OK:
        return (0, _assoc3.default)('ok', (0, _merge3.default)(state.ok, action.payload), state);
      default:
        return state;
    }
  };
};