{"version":3,"sources":["assets/cropped.png","assets/sophiachen-resume.pdf","components/NavBar/NavBar.tsx","pages/Home/Home.tsx","pages/About/About.tsx","components/ProjectModal/ProjectModal.tsx","pages/Work/Work.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBar","props","state","className","Navbar","collapseOnSelect","expand","Toggle","aria-controls","Collapse","id","Nav","NavItem","exact","activeClassName","to","resumeFile","target","React","Component","Home","activePage","src","profilePic","About","href","ProjectModal","link","this","projectDescription","length","Modal","size","aria-labelledby","centered","Header","closeButton","Title","projectName","projectLibs","Body","Footer","Button","onClick","onHide","Work","modalShowInd","projects","newInd","setState","setModalShow","show","history","createBrowserHistory","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3fcfa29f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cropped.f4fc06dd.png\";","module.exports = __webpack_public_path__ + \"static/media/sophiachen-resume.8a1b5eef.pdf\";","import React from \"react\";\nimport \"./NavBar.css\";\nimport { Nav, NavItem }  from \"react-bootstrap\";\nimport { NavLink  } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Col from \"react-bootstrap/Col\";\nimport resumeFile from \"../../assets/sophiachen-resume.pdf\";\nimport { useLocation } from 'react-router-dom';\n\ntype NavBarProps = {\n  activePage: string | null\n};\n\ntype NavBarState = {\n\n};\n\nexport default class NavBar extends React.Component<NavBarProps, NavBarState> {\n  constructor(props: NavBarProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render () {\n    return (\n      <div className=\"NavBar\">\n        <Navbar\n          collapseOnSelect\n          expand=\"lg\"\n        >\n          <Navbar.Toggle className=\"ml-auto\" aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <NavItem>\n                <NavLink exact className=\"navbar-elem\" activeClassName=\"selected\" to=\"/about\">about</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink exact className=\"navbar-elem\" activeClassName=\"selected\" to=\"/work\">work</NavLink>\n              </NavItem>\n              <NavItem >\n                <NavLink exact className=\"navbar-elem\" activeClassName=\"selected\" to={resumeFile} target=\"_blank\">resume</NavLink>\n              </NavItem>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport './Home.css'\nimport profilePic from \"../../assets/cropped.png\";\nimport NavBar from '../../components/NavBar/NavBar';\nimport { Ripple } from 'react-spinners-css';\n\ntype HomeProps = {};\n\ntype HomeState = {\n  loading: boolean\n};\n\nexport default class Home extends React.Component<HomeProps, HomeState> {\n  constructor(props: HomeProps) {\n    super(props);\n  }\n\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"green-circle\">\n        </div>\n        <NavBar activePage={null}/>\n\n        <img className=\"profile-pic\" src={profilePic}></img>\n\n        <div className=\"welcome-circles\">\n          <div className=\"pink-circle\">\n          </div>\n\n          <div className=\"red-circle\">\n          </div>\n\n          <div className=\"name\">\n            <h1> SOPHIA CHEN </h1>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport './About.css'\nimport profilePic from \"../../assets/cropped.png\";\nimport NavBar from '../../components/NavBar/NavBar';\n\ntype AboutProps = {};\n\ntype AboutState = {};\n\nexport default class About extends React.Component<AboutProps, AboutState> {\n  constructor(props: AboutProps) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"About\">\n        <NavBar activePage={\"about\"}/>\n        <div className=\"background\">\n          <img className=\"profile-pic-about\" src={profilePic}></img>\n\n          <div className=\"pink-circle-about\">\n          </div>\n\n        </div>\n        <div className='more-info'>\n\n          <p> hi! i’m sophia, a rising senior studying <span className=\"emphasis\">\n          computer science </span> and <span className=\"emphasis\">\n          applied mathematics </span> at <span className=\"emphasis\">\n          Brown University</span>. my interests lie\n          particularly in <span className=\"emphasis\">software engineering\n          </span>, <span className=\"emphasis\">machine learning</span>,\n          and <span className=\"emphasis\">ui/ux design</span>.</p>\n\n          <br></br>\n\n          <p> this summer i was a software engineering intern in the\n          <span className=\"emphasis\"> answers and segments</span> team of\n          <span className=\"emphasis\"> Bing WebXT </span>\n          at <span className=\"emphasis\">Microsoft</span>, working on a query\n          reformulation natural language understanding project for improving\n          the question-answering experience for non-triggered queries.</p>\n\n          <br></br>\n\n          <p> formerly an intern <span className=\"emphasis\">Microsoft</span> in the\n          <span className=\"emphasis\"> natural language understanding and\n          experiences</span> team of <span className=\"emphasis\">Bing Engineering\n          </span>, and an engineering intern at the <span className=\"emphasis\">\n          National Center for Atmospheric Research</span>.</p>\n\n          <br></br>\n\n          <p> at school, I am a member of <span className=\"emphasis\"> Hack@Brown\n          </span>, to organize Brown's annual hackathon of 400+ participants,\n          formerly as a developer on the <span className=\"emphasis\">development team\n          </span>, and now <span className=\"emphasis\">codirector </span>\n          of a team of 40+ members. i also am a <span className=\"emphasis\">\n          teaching assistant</span> in the computer science department for\n          ui/ux and software engineering.</p>\n\n          <div className=\"socials\">\n            <a className=\"social-link\" href=\"https://www.linkedin.com/in/sophiachen9981/\">linkedin</a>\n            <a className=\"social-link\" href=\"https://github.com/schen9981\">github</a>\n            <a className=\"social-link\" href=\"https://medium.com/@sophia_chen1\">medium</a>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport './ProjectModal.css';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\ntype ProjectModalProps = {\n  show: boolean;\n  onHide: () => void;\n  projectName: string;\n  projectDescription: string[];\n  projectLibs: string;\n};\n\ntype ProjectModalState = {\n};\n\nexport default class ProjectModal extends React.Component<ProjectModalProps, ProjectModalState> {\n  constructor(props: ProjectModalProps) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    let link;\n    if (this.props.projectDescription[2].length == 0) {\n      link = <p> code available upon request </p>;\n    } else {\n      link = <a href={this.props.projectDescription[2]} target=\"_blank\"> more info </a>;\n    }\n    return (\n      <Modal\n      {...this.props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <h3>{this.props.projectName}</h3>\n            <h5>{this.props.projectLibs}</h5>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            {this.props.projectDescription[0]}\n          </p>\n          <p>\n            {this.props.projectDescription[1]}\n          </p>\n          {link}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n\n    );\n  }\n\n}\n","import React from 'react';\nimport './Work.css'\nimport profilePic from \"../../assets/cropped.png\";\nimport NavBar from '../../components/NavBar/NavBar';\nimport ProjectModal from '../../components/ProjectModal/ProjectModal';\n\ntype WorkProps = {};\n\ntype WorkState = {\n  modalShowInd: number;\n  projects: any\n};\n\nexport default class Work extends React.Component<WorkProps, WorkState> {\n  constructor(props: WorkProps) {\n    super(props);\n    this.state = {\n      modalShowInd: -1,\n      projects: [\n        {\n          projectName: \"genfit\",\n          projectLibs: \"java, javascript, jquery, html/css, sqlite\",\n          projectDescription:\n            [ \"Genfit is a virtual closet webapplications targeted to \" +\n              \"improve users’ closet visibility, provide insight and \" +\n              \"inspiration into potential outfit combinations, and generate \" +\n              \"personalized outfit suggestions based on user preferences.\",\n              \"This project was done in collaboration with 3 other members. \" +\n              \"I worked specifically on the frontend interface, as well as \" +\n              \"the frontend-backend integration for different supported \" +\n              \"features, such as adding/deleting closet items, favoriting \" +\n              \"other users’s outfits, constructing outfits, and displaying \" +\n              \"generated outfits. This involved querying our database and \" +\n              \"setting up routes for appropriate connections. \",\n              \"https://github.com/schen9981/genfit\"\n            ]\n        },\n        {\n          projectName: \"hack@brown\",\n          projectLibs: \"react, typescript\",\n          projectDescription:\n            [ \"Hack@Brown is Brown University’s annual hackathon. \" +\n              \"A large part of the logistics and facilitation of the \" +\n              \"hackathon is consolidated into the website, in order to \" +\n              \"advertise to potential sponsors, encourage registration, and \" +\n              \"facilitate application and registration information. \",\n              \"I worked alongside 6 other members of Hack@Brown’s development \" +\n              \"team to develop, from scratch, the 2020 iteration of the \" +\n              \"hackathon’s website. We worked closely with the design team \" +\n              \"to implement mockups, as well as many other teams in the \" +\n              \"organizing team to gauge user feedback regarding the \" +\n              \"application. I worked specifically on the implementing the \" +\n              \"registration and confirmation experience, from  the frontend \" +\n              \"interface to integrating frontend input data to backend \" +\n              \"database, allowing for applications to save, edit,and submit \" +\n              \"registration information.\",\n              \"https://2020.hackatbrown.org\"\n            ]\n        },\n        {\n          projectName: \"automated selfie camera\",\n          projectLibs: \"python\",\n          projectDescription:\n            [\n              \"This application is a live camera app that will capture an \" +\n              \"image when it detects the subject smiling, with two core \" +\n              \"components: (1) the smile detection model and (2) the live camera feed.\",\n              \"I worked with two others to develop this Computer Vision \" +\n              \"driven application. I worked on data processing and designed \" +\n              \"and trained the foundational smile detection model, which \" +\n              \"took in frames taken from the camera feed, detect faces, and \" +\n              \"classify them as either smiling or not. This iterative \" +\n              \"process entailed processing our training data, and extracting \" +\n              \"various features from images and feeding them into variations \" +\n              \"of machine learning techniques in order to achieve highest \" +\n              \"accuracy on both our data and live camera input. \",\n              \"https://github.com/schen9981/auto-selfie-camera\"\n            ]\n        },\n        {\n          projectName: \"avocado data investigation\",\n          projectLibs: \"python\",\n          projectDescription:\n            [\n              \"This data investigation sought to explore the trends in \" +\n              \"avocado consumption in the US, in connection with millenials, \" +\n              \"a group classified as those born between 1980 and 1994. \" +\n              \"Specifically, we were looking at whether cities in the United \" +\n              \"States with a higher population of millenials, especially \" +\n              \"those with a high population of millenials with above-average \" +\n              \"income, consume more avocados despite prices increases in recent years.\",\n              \"I worked with three others to carry out this investigation, \" +\n              \"which involved finding datasets, cleaning and reorganizing \" +\n              \"the data for analysis purposes, and carrying out multiple \" +\n              \"statistical tests to determine trends and underlying oddities \" +\n              \"in the relationship we were investigating. I worked \" +\n              \"specifically on data cleaning and processing using \" +\n              \"SQLite and Python, as well as analyzing the results of \" +\n              \"our statistical tests.\",\n              \"https://github.com/schen9981/ds-final-project\"\n            ]\n        },\n        {\n          projectName: \"maps\",\n          projectLibs: \"java, javascript,  canvas, sqlite\",\n          projectDescription:\n            [\n              \"Maps is an interactive map GUI modeled \" +\n              \"after Google Maps, centered around streets in the \" +\n              \"Providence and neighboring region pulled from a live map database. \",\n              \"This application featured user pan/zoom, shortest route \" +\n              \"detection, and live traffic data updates, with efficient \" +\n              \"frontend rendering using caching and tiling. Implementation \" +\n              \"entailed a base A-star algorithm, database querying to \" +\n              \"efficiently pull information within specific tiles, and \" +\n              \"mathematical calculations to determine best tiling mechanisms \" +\n              \"for zoom/pan.  Displays were drawn using Canvas, in order to \" +\n              \"mimic the Google Maps experience. \",\n              \"\"\n            ]\n        },\n        {\n          projectName: \"search\",\n          projectLibs: \"java\",\n          projectDescription:\n            [\n              \"This application was an interactive search engine that \" +\n              \"takes user text queries and returns most relevant documents \" +\n              \"using the PageRank algorithm, based on a set of document corpus.\",\n              \"\",\n              \"\"\n            ]\n        },\n        {\n          projectName: \"accelerating analysis with parallel computing\",\n          projectLibs: \"R\",\n          projectDescription:\n            [\n              \"This investigation sought to determine optimal parallelization \" +\n              \"and data processing schemes to run statistical analysis on \" +\n              \"large CMIP climate data.\",\n              \"We looked into parallelizing Extreme Value Analysis on CMIP \" +\n              \"climate data, using multiple R parallelization packages. \" +\n              \"We sought to characterize the impacts of cluster types, \" +\n              \"communication protocols, loop parallelizations, and data \" +\n              \"reading approaches to determine the best framework for \" +\n              \"carrying out any type of statistical analysis on large \" +\n              \"datasets in parallel. \",\n              \"https://opensky.ucar.edu/islandora/object/technotes%253A549/datastream/PDF/view\"\n            ]\n        },\n        {\n          projectName: \"foliar injury analysis\",\n          projectLibs: \"R\",\n          projectDescription:\n            [\n              \"This investigation looked into statistical correlations \" +\n              \"between ozone concentration and visible foliar injury to \" +\n              \"determine capabilities of visible plant data , in order to \" +\n              \"estimate current and future ozone concentrations based on \" +\n              \"visible observations.\",\n              \"The statistical research entailed looking into two datasets. \" +\n              \"The first was based on plants in ozone bioindicator gardens, \" +\n              \"which have been specifically created for the purpose of \" +\n              \"observing ozone damage. The second was the cumulative \" +\n              \"W126 index,  a metric used to summarize hourly ozone \" +\n              \"concentrations and gives higher, more damaging ozone \" +\n              \"concentrations more weight. Then, using multiple techniques \" +\n              \"of data modeling, investigated which model best explained inter-annual variability. \",\n              \"https://opensky.ucar.edu/islandora/object/technotes%253A557/datastream/PDF/view\"\n            ]\n        }\n      ]\n    };\n\n  }\n\n  setModalShow(newInd) {\n    // 1 => project 1, -1 => hide all modals\n    this.setState({\n      modalShowInd: newInd\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Work\">\n        <NavBar activePage={\"work\"}/>\n\n        <div className=\"project-welcome\">\n          <h4> checkout some personal projects i've been working on! </h4>\n        </div>\n\n        <div className=\"portfolio-content\">\n\n          <div className=\"project-display light-pink\" id=\"project1-bubble\" onClick={() => this.setModalShow(1)}>\n            <h2> {this.state.projects[0].projectName} </h2>\n            <p> {this.state.projects[0].projectLibs} </p>\n          </div>\n\n          <ProjectModal\n            show={this.state.modalShowInd == 1}\n            onHide={() => this.setModalShow(-1)}\n            projectName={this.state.projects[0].projectName}\n            projectLibs={this.state.projects[0].projectLibs}\n            projectDescription={this.state.projects[0].projectDescription}\n          />\n\n\n          <div className=\"project-display light-green\" id=\"project2-bubble\" onClick={() => this.setModalShow(2)}>\n            <h2> {this.state.projects[1].projectName} </h2>\n            <p> {this.state.projects[1].projectLibs} </p>\n          </div>\n\n          <ProjectModal\n            show={this.state.modalShowInd == 2}\n            onHide={() => this.setModalShow(-1)}\n            projectName={this.state.projects[1].projectName}\n            projectLibs={this.state.projects[1].projectLibs}\n            projectDescription={this.state.projects[1].projectDescription}\n          />\n\n          <div className=\"project-display red\" id=\"project3-bubble\" onClick={() => this.setModalShow(3)}>\n            <h2> {this.state.projects[2].projectName} </h2>\n            <p> {this.state.projects[2].projectLibs} </p>\n          </div>\n\n          <ProjectModal\n            show={this.state.modalShowInd == 3}\n            onHide={() => this.setModalShow(-1)}\n            projectName={this.state.projects[2].projectName}\n            projectLibs={this.state.projects[2].projectLibs}\n            projectDescription={this.state.projects[2].projectDescription}\n          />\n\n          <div className=\"project-display light-pink\" id=\"project4-bubble\" onClick={() => this.setModalShow(4)}>\n            <h2> {this.state.projects[3].projectName} </h2>\n            <p> {this.state.projects[3].projectLibs} </p>\n          </div>\n\n          <ProjectModal\n            show={this.state.modalShowInd == 4}\n            onHide={() => this.setModalShow(-1)}\n            projectName={this.state.projects[3].projectName}\n            projectLibs={this.state.projects[3].projectLibs}\n            projectDescription={this.state.projects[3].projectDescription}\n          />\n\n          <div className=\"project-display green\" id=\"project5-bubble\" onClick={() => this.setModalShow(5)}>\n            <h2> {this.state.projects[4].projectName} </h2>\n            <p> {this.state.projects[4].projectLibs} </p>\n          </div>\n\n          <ProjectModal\n            show={this.state.modalShowInd == 5}\n            onHide={() => this.setModalShow(-1)}\n            projectName={this.state.projects[4].projectName}\n            projectLibs={this.state.projects[4].projectLibs}\n            projectDescription={this.state.projects[4].projectDescription}\n          />\n\n          <div className=\"project-display light-green\" id=\"project6-bubble\" onClick={() => this.setModalShow(6)}>\n            <h2> {this.state.projects[5].projectName} </h2>\n            <p> {this.state.projects[5].projectLibs} </p>\n          </div>\n\n          <ProjectModal\n            show={this.state.modalShowInd == 6}\n            onHide={() => this.setModalShow(-1)}\n            projectName={this.state.projects[5].projectName}\n            projectLibs={this.state.projects[5].projectLibs}\n            projectDescription={this.state.projects[5].projectDescription}\n          />\n\n          <div className=\"project-display light-pink\" id=\"project7-bubble\" onClick={() => this.setModalShow(7)}>\n            <h2> {this.state.projects[6].projectName} </h2>\n            <p> {this.state.projects[6].projectLibs} </p>\n          </div>\n\n          <ProjectModal\n            show={this.state.modalShowInd == 7}\n            onHide={() => this.setModalShow(-1)}\n            projectName={this.state.projects[6].projectName}\n            projectLibs={this.state.projects[6].projectLibs}\n            projectDescription={this.state.projects[6].projectDescription}\n          />\n\n          <div className=\"project-display red\" id=\"project8-bubble\" onClick={() => this.setModalShow(8)}>\n            <h2> {this.state.projects[7].projectName} </h2>\n            <p> {this.state.projects[7].projectLibs} </p>\n          </div>\n\n          <ProjectModal\n            show={this.state.modalShowInd == 8}\n            onHide={() => this.setModalShow(-1)}\n            projectName={this.state.projects[7].projectName}\n            projectLibs={this.state.projects[7].projectLibs}\n            projectDescription={this.state.projects[7].projectDescription}\n          />\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport Home from \"./pages/Home/Home\";\nimport About from \"./pages/About/About\";\nimport Work from \"./pages/Work/Work\";\nimport {createBrowserHistory} from \"history\";\n\ntype AppProps = {};\n\ntype AppState = {};\n\nconst history = createBrowserHistory();\n\nexport default class App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n          <Switch>\n            <Route path='/about'>\n              <div className=\"App\">\n                <About />\n              </div>\n            </Route>\n            <Route path='/work'>\n              <div className=\"App\">\n                <Work />\n              </div>\n            </Route>\n            <Route exact path=\"/\">\n              <div className=\"App\">\n                <Home />\n              </div>\n            </Route>\n          </Switch>\n      </Router>\n    );\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    // if (publicUrl.origin !== window.location.origin) {\n    //   // Our service worker won't work if PUBLIC_URL is on a different origin\n    //   // from what our page is served on. This might happen if a CDN is used to\n    //   // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n    //   return;\n    // }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}